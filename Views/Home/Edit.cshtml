@model deadDraft.ViewModels.TaskEditViewModels

@{
    ViewBag.Title = "Edit Employee";
}

<form asp-controller="home" asp-action="Edit" enctype="multipart/form-data" method="post" class="mt-3">

    <div asp-validation-summary="All" class="text-danger">
    </div>
    @*Use hidden input elements to store employee id and ExistingPhotoPath
        which we need when we submit the form and update data in the database*@
    <input hidden asp-for="Id" />

    @*Bind to the properties of the EmployeeEditViewModel. The asp-for tag helper
        takes care of displaying the existing data in the respective input elements*@
    <div class="form-group row">
        <label asp-for="Title" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Title" class="form-control" placeholder="Title">
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Duty" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Duty" class="form-control" placeholder="Duty">
            <span asp-validation-for="Duty" class="text-danger"></span>
        </div>
    </div>


    <br />
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-success btn-sm" style="margin-right:10px;">Update</button><a asp-action="index" asp-controller="home" class="btn btn-warning btn-sm">Cancel</a>
        </div>
    </div>
    @section Scripts {
        @*<script>
                $(document).ready(function () {
                    $('.custom-file-input').on("change", function () {
                        var fileName = $(this).val().split("\\").pop();
                        $(this).next('.custom-file-label').html(fileName);
                    });
                });
            </script>*@
    }
</form>